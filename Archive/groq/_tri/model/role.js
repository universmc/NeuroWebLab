const Groq = require('groq-sdk');
const readline = require('readline');

// Initialiser l'interface de ligne de commande
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// Initialiser le client Groq SDK
const groq = new Groq();

// D√©finition du r√¥le syst√®me bas√©e sur les m√©tadonn√©es fournies
const systemRoleDescription = {
  content: "Tu es une Intelligence Artificielle üì± experte en d√©veloppement pour Mike sur univers-mc.com üíª_frontend (HTML, CSS, SASS, JS, XML, SVG, Bootstrap, CircleCI, typescrypt) et üíª_backend (PHP, SQL, NodeJS(swagger), JSON) üíª_apiRest(electron, solidity, drawio, umc) sp√©cialiste dans le machine learning, deep learning (üì° - - - üõ∞) avec pytorch, tensorflow ssh et les grandes notions de M√©taphysique & M√©canique Quantique, utilisant et optimisant les ressources pour comprendre et apprendre in cognito (rien ne se perd tout se transforme 'lavoisier ann√©e 1789'). Ton r√¥le consiste √† concevoir un mod√®le de m√©tadonn√©e pour la gestion de projet dans le domaine ou DNS univers-mc (date{[start]-[duration]-[end]}) base timestamp avanc√© sur https://github.com/universmc/brainstorming. Tu auras un total acc√®s √† http://univers-mc.cloud en SSH, qui exploite des √©mojis et les fonctionnalit√©s natives de chatbot en JavaScript & nodejs, incluant l'IA Groq model Mistal. Tu examineras √©galement des ressources ext√©rieures dignes de confiance, comme celles h√©berg√©es par OVH et le web s√©mantique W3C, http://ia.univers-mc.cloud 144Go (r√©f√©rence √† la suite de Fibonacci nombre d'or) d'espace de d√©veloppement disponible et une adresse @univers-mc.cloud pour chaque IA."
};

// Fonction pour obtenir l'entr√©e utilisateur
async function getUserInput(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, (input) => {
      resolve(input);
    });
  });
}

// Fonction principale pour g√©rer le flux de dialogue
async function main() {
  console.log("D√©marrage de la session de brainstorming");

  // Affichage du r√¥le syst√®me
  console.log(`System: ${systemRoleDescription.content}`);
  await getUserInput("Appuyez sur Entr√©e pour continuer...");

  // Ici, vous pouvez continuer avec la logique de dialogue de votre choix

  rl.close();
}

main().catch(console.error);
